"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BitcodeCompiler = void 0;
const debugAPI = require("debug");
const compilation_1 = require("./compilation");
const constants_1 = require("./constants");
const code_1 = require("./code");
const node_1 = require("./node");
const transform_1 = require("./transform");
const execute_builder_1 = require("./helpers/execute-builder");
const init_builder_1 = require("./helpers/init-builder");
const debug = debugAPI('llparse:bitcode');
class BitcodeCompiler {
    constructor(container, options) {
        this.options = options;
        container.add(constants_1.CONTAINER_KEY, { code: code_1.default, node: node_1.default, transform: transform_1.default });
    }
    compile(info) {
        // Compile to bitcode
        const compilation = new compilation_1.Compilation(info.prefix, info.properties, info.spans, this.options);
        debug('building root');
        const root = info.root;
        const initFn = root.get(constants_1.CONTAINER_KEY)
            .build(compilation);
        debug('building match sequence');
        compilation.buildMatchSequence();
        debug('building init');
        const ib = new init_builder_1.InitBuilder();
        ib.build(compilation, initFn);
        debug('building execute');
        const eb = new execute_builder_1.ExecuteBuilder();
        eb.build(compilation, info);
        debug('building bitcode');
        const bitcode = compilation.buildBitcode(initFn);
        debug('done');
        return bitcode;
    }
}
exports.BitcodeCompiler = BitcodeCompiler;
//# sourceMappingURL=index.js.map