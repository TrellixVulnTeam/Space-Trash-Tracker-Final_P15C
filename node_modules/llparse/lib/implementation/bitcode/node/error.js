"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Error = void 0;
const constants_1 = require("../constants");
const base_1 = require("./base");
class ErrorNode extends base_1.Node {
    storeError(bb, pos) {
        const ctx = this.compilation;
        const reason = ctx.cstring(this.ref.reason);
        const cast = bb.getelementptr(reason, constants_1.GEP_OFF.val(0), constants_1.GEP_OFF.val(0), true);
        const errorField = ctx.errorField(bb);
        bb.store(errorField.ty.toPointer().to.val(this.ref.code), errorField);
        bb.store(cast, ctx.reasonField(bb));
        bb.store(pos.current, ctx.errorPosField(bb));
        return bb;
    }
    doBuild(bb, pos) {
        bb = this.storeError(bb, pos);
        bb.parent.attrs.add(constants_1.FN_ATTR_ERROR);
        // Non-recoverable state
        const currentField = this.compilation.currentField(bb);
        bb.store(currentField.ty.toPointer().to.val(null), currentField);
        const retType = bb.parent.ty.toSignature().returnType;
        bb.ret(retType.val(null));
    }
}
exports.Error = ErrorNode;
//# sourceMappingURL=error.js.map