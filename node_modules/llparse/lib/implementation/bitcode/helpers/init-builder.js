"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InitBuilder = void 0;
const constants_1 = require("../constants");
class InitBuilder {
    build(ctx, current) {
        const sig = ctx.ir.signature(ctx.ir.void(), [ctx.state.ptr()]);
        const fn = ctx.defineFunction(sig, `${ctx.prefix}_init`, [constants_1.ARG_STATE]);
        fn.paramAttrs[0].add(constants_1.ATTR_STATE);
        fn.linkage = 'external';
        const bb = fn.body;
        for (const field of ctx.state.fields) {
            const ptr = ctx.stateField(bb, field.name);
            if (field.name === constants_1.STATE_CURRENT) {
                bb.store(current, ptr);
            }
            else if (field.ty.isInt()) {
                bb.store(field.ty.toInt().val(0), ptr);
            }
            else if (field.ty.isPointer()) {
                bb.store(field.ty.toPointer().val(null), ptr);
            }
            else {
                throw new Error(`Unknown state property type: "${field.ty.typeString}"`);
            }
        }
        bb.ret();
    }
}
exports.InitBuilder = InitBuilder;
//# sourceMappingURL=init-builder.js.map