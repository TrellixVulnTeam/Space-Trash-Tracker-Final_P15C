"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MatchSequence = void 0;
const constants_1 = require("../constants");
class MatchSequence {
    constructor(transform) {
        this.transform = transform;
    }
    static buildGlobals(out) {
        out.push(`const ${constants_1.SEQUENCE_COMPLETE} = 0;`);
        out.push(`const ${constants_1.SEQUENCE_PAUSE} = 1;`);
        out.push(`const ${constants_1.SEQUENCE_MISMATCH} = 2;`);
    }
    getName() {
        return `_match_sequence_${this.transform.ref.name}`;
    }
    build(ctx, out) {
        const buf = ctx.bufArg();
        const off = ctx.offArg();
        out.push(`${this.getName()}(${buf}, ${off}, seq) {`);
        // Body
        out.push(`  let index = ${ctx.indexField()};`);
        out.push(`  for (; ${off} !== ${buf}.length; ${off}++) {`);
        const single = this.transform.build(ctx, `${buf}[${off}]`);
        out.push(`    const current = ${single};`);
        out.push('    if (current === seq[index]) {');
        out.push('      if (++index === seq.length) {');
        out.push(`        ${ctx.indexField()} = 0;`);
        out.push(`        ${ctx.statusField()} = ${constants_1.SEQUENCE_COMPLETE};`);
        out.push('        return off;');
        out.push('      }');
        out.push('    } else {');
        out.push(`      ${ctx.indexField()} = 0;`);
        out.push(`      ${ctx.statusField()} = ${constants_1.SEQUENCE_MISMATCH};`);
        out.push('      return off;');
        out.push('    }');
        out.push('  }');
        out.push(`  ${ctx.indexField()} = index;`);
        out.push(`  ${ctx.statusField()} = ${constants_1.SEQUENCE_PAUSE};`);
        out.push('  return off;');
        out.push('}');
    }
}
exports.MatchSequence = MatchSequence;
//# sourceMappingURL=match-sequence.js.map