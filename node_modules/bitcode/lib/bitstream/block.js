"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assert = require("assert");
const MIN_ABBR_ID_WIDTH = 2;
const ABBR_INDEX_OFF = 4;
class Block {
    constructor(id, abbrIDWidth, globalAbbrs) {
        this.id = id;
        this.abbrIDWidth = abbrIDWidth;
        this.abbrList = [];
        // abbr.name => entry
        this.abbrMap = new Map();
        assert(MIN_ABBR_ID_WIDTH <= abbrIDWidth, 'AbbrID width is too small');
        globalAbbrs.forEach((abbr) => this.addAbbr(abbr));
    }
    addAbbr(abbr) {
        assert(!this.abbrMap.has(abbr.name), `Duplicate abbreviation with name: "${abbr.name}"`);
        const index = this.abbrList.length + ABBR_INDEX_OFF;
        this.abbrList.push(abbr);
        this.abbrMap.set(abbr.name, { abbr, index });
        return index;
    }
    getAbbr(name) {
        return this.abbrMap.get(name);
    }
    hasAbbr(name) {
        return this.abbrMap.has(name);
    }
}
exports.Block = Block;
//# sourceMappingURL=block.js.map