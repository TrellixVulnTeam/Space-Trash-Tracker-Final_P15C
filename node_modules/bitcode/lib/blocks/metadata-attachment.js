"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("../constants");
const base_1 = require("./base");
const METADATA_ATTACHMENT_ABBR_ID_WIDTH = 3;
class MetadataAttachmentBlock extends base_1.Block {
    constructor(metadataBlock, fn, kinds) {
        super();
        this.metadataBlock = metadataBlock;
        this.fn = fn;
        this.kinds = kinds;
    }
    build(writer) {
        super.build(writer);
        let instrId = 0;
        const attachments = [];
        for (const bb of this.fn) {
            for (const i of bb) {
                const items = [];
                i.metadata.forEach((metadata, key) => {
                    items.push({ key: this.kinds.get(key), metadata });
                });
                if (items.length !== 0) {
                    attachments.push({ instrId, items });
                }
                instrId++;
            }
        }
        if (attachments.length === 0) {
            return;
        }
        writer.enterBlock(constants_1.BLOCK_ID.METADATA_ATTACHMENT, METADATA_ATTACHMENT_ABBR_ID_WIDTH);
        attachments.forEach((attachment) => {
            const operands = [attachment.instrId];
            attachment.items.forEach((item) => {
                operands.push(item.key, this.metadataBlock.get(item.metadata));
            });
            writer.writeUnabbrRecord(constants_1.METADATA_ATTACHMENT_CODE.ATTACHMENT, operands);
        });
        writer.endBlock(constants_1.BLOCK_ID.METADATA_ATTACHMENT);
    }
}
exports.MetadataAttachmentBlock = MetadataAttachmentBlock;
//# sourceMappingURL=metadata-attachment.js.map