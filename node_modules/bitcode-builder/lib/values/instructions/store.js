"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assert = require("assert");
const types_1 = require("../../types");
const base_1 = require("./base");
const common_1 = require("./common");
// TODO(indutny): separate instruction for atomic store?
class Store extends base_1.Instruction {
    constructor(value, ptr, alignment, isVolatile = false) {
        super(new types_1.Void(), 'store', [value, ptr]);
        this.value = value;
        this.ptr = ptr;
        this.alignment = alignment;
        this.isVolatile = isVolatile;
        if (alignment !== undefined) {
            common_1.checkAlignment(alignment);
        }
        const slotType = ptr.ty.toPointer().to;
        // It's okay to store functions inside a pointer field
        assert(value.ty.isEqual(slotType), 'Invalid value type for Store instruction');
    }
}
exports.Store = Store;
//# sourceMappingURL=store.js.map