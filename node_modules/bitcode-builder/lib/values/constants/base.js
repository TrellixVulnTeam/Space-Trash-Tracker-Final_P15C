"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assert = require("assert");
const base_1 = require("../base");
const constants = require("./");
class Constant extends base_1.Value {
    isInt() {
        return this instanceof constants.Int;
    }
    isArray() {
        return this instanceof constants.Array;
    }
    isStruct() {
        return this instanceof constants.Struct;
    }
    isNull() {
        return this instanceof constants.Null;
    }
    isUndef() {
        return this instanceof constants.Undef;
    }
    isMetadata() {
        return this instanceof constants.Metadata;
    }
    isDeclaration() {
        return this instanceof constants.Declaration;
    }
    isFunction() {
        return this instanceof constants.Func;
    }
    toInt() {
        assert(this.isInt(), 'Constant is not an Int instance');
        return this;
    }
    toArray() {
        assert(this.isArray(), 'Constant is not an Array instance');
        return this;
    }
    toStruct() {
        assert(this.isStruct(), 'Constant is not a Struct instance');
        return this;
    }
    toNull() {
        assert(this.isNull(), 'Constant is not a Null instance');
        return this;
    }
    toUndef() {
        assert(this.isUndef(), 'Constant is not a Undef instance');
        return this;
    }
    toMetadata() {
        assert(this.isMetadata(), 'Constant is not a Metadata instance');
        return this;
    }
    toDeclaration() {
        assert(this.isDeclaration(), 'Constant is not a Declaration instance');
        return this;
    }
    toFunction() {
        assert(this.isFunction(), 'Constant is not a Func instance');
        return this;
    }
}
exports.Constant = Constant;
//# sourceMappingURL=base.js.map