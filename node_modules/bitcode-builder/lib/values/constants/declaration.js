"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assert = require("assert");
const attribute_list_1 = require("../../attribute-list");
const utils_1 = require("../../utils");
const base_1 = require("./base");
class Declaration extends base_1.Constant {
    constructor(signature, name) {
        super(signature);
        this.name = name;
        this.returnAttrs = new attribute_list_1.AttributeList();
        this.attrs = new attribute_list_1.AttributeList();
        this.linkage = 'external';
        this.cconv = 'ccc';
        assert(utils_1.validateName(name), `Invalid characters in function name: "${name}"`);
        this.paramAttrs = signature.params.map(() => new attribute_list_1.AttributeList());
    }
    isEqual(to) {
        if (this === to) {
            return true;
        }
        if (!to.isDeclaration()) {
            return false;
        }
        // TODO(indutny): verify cconv, linkage, paramAttrs, etc
        return to.ty.isEqual(this.ty);
    }
    toString() {
        return `[declaration name=${this.name}]`;
    }
}
exports.Declaration = Declaration;
//# sourceMappingURL=declaration.js.map