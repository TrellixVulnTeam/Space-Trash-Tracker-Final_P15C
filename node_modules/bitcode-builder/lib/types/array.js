"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assert = require("assert");
const values = require("../values");
const base_1 = require("./base");
class ArrayTy extends base_1.Type {
    constructor(length, elemType) {
        super(`[${length} x ${elemType.typeString}]`);
        this.length = length;
        this.elemType = elemType;
        assert(!elemType.isVoid(), 'Can\'t create Array of Void');
        assert(!elemType.isSignature(), 'Array can\'t have signature elements, please use `sig.ptr()`');
    }
    isEqual(to) {
        if (this === to) {
            return true;
        }
        if (!to.isArray()) {
            return false;
        }
        const toArray = to;
        return toArray.length === this.length &&
            toArray.elemType.isEqual(this.elemType);
    }
    val(elems) {
        assert.strictEqual(elems.length, this.length, 'Invalid elements count');
        return new values.constants.Array(this, elems);
    }
}
exports.Array = ArrayTy;
//# sourceMappingURL=array.js.map